apiVersion: apps/v1
kind: Deployment
metadata:
  name: events-service
  namespace: codehunters
spec:
  replicas: 1
  selector:
    matchLabels:
      app: events-service
  template:
    metadata:
      labels:
        app: events-service
    spec:
      serviceAccountName: service-account-events-service
      volumes:
        - name: secrets-store-inline
          csi:
            driver: secrets-store.csi.k8s.io
            readOnly: true
            volumeAttributes:
              secretProviderClass: secret-provider-events-service # SecretProviderClass name
      initContainers:
        - name: create-secrets
          image: alpine
          command:
            - sh
            - -c
            - |
              # Read the secrets from the volume
              DB_USERNAME=$(cat /mnt/secrets-store/username)
              DB_PASSWORD=$(cat /mnt/secrets-store/password)

          volumeMounts:
            - name: secrets-store-inline
              mountPath: /mnt/secrets-store
              readOnly: true
      containers:
        - name: events-service
          imagePullPolicy: Always
          image: 584279960914.dkr.ecr.eu-central-1.amazonaws.com/eventsserviceecr:czirjak
          ports:
            - containerPort: 8080
          env:
            - name: CONFIG_ENV
              value: "reporting"
          resources:
            requests:
              memory: "300Mi"
              cpu: "250m"
            limits:
              memory: "500Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health
            initialDelaySeconds: 60
            periodSeconds: 5
            timeoutSeconds: 2
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
            initialDelaySeconds: 90
            periodSeconds: 3
            failureThreshold: 3
